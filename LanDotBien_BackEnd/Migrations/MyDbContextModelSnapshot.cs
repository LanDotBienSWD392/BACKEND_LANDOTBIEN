// <auto-generated />
using System;
using LanVar.Core.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanDotBien_BackEnd.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LanVar.Core.Entity.Auction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AuctionDay")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Auction_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Deposit_Money")
                        .HasColumnType("double");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Product_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Product_id");

                    b.ToTable("Auction");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            AuctionDay = new DateTime(2024, 3, 24, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4510),
                            Auction_Name = "Auction 1",
                            Deposit_Money = 50.0,
                            EndDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Product_id = 1L,
                            StartDay = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4510),
                            Status = 0
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Bid", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Auction_id")
                        .HasColumnType("bigint");

                    b.Property<double>("BID")
                        .HasColumnType("double");

                    b.Property<DateTime>("Bid_time")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Auction_id");

                    b.HasIndex("User_id");

                    b.ToTable("Bid");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Auction_id = 1L,
                            BID = 60.0,
                            Bid_time = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4630),
                            User_id = 1L
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Bill", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Order_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Payment_Method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Total_Price")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("Order_id");

                    b.ToTable("Bill");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Order_id = 1L,
                            Payment_Method = "Credit Card",
                            Total_Price = 100.0
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Cart", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Product_id")
                        .HasColumnType("bigint");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("isSelected")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("Product_id");

                    b.HasIndex("User_id");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Product_id = 1L,
                            User_id = 1L,
                            isSelected = true
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Order", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Total_Price")
                        .HasColumnType("double");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("User_id");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Date = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4559),
                            Status = 0,
                            Total_Price = 100.0,
                            User_id = 1L
                        },
                        new
                        {
                            id = 2L,
                            Date = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4560),
                            Status = 1,
                            Total_Price = 100.0,
                            User_id = 1L
                        },
                        new
                        {
                            id = 3L,
                            Date = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4562),
                            Status = 2,
                            Total_Price = 100.0,
                            User_id = 1L
                        },
                        new
                        {
                            id = 4L,
                            Date = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4563),
                            Status = 3,
                            Total_Price = 100.0,
                            User_id = 1L
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.OrderItem", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Order_id")
                        .HasColumnType("bigint");

                    b.Property<long>("Product_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Order_id");

                    b.HasIndex("Product_id");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Order_id = 1L,
                            Product_id = 1L
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Package", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Package_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.ToTable("Package");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            EndDay = new DateTime(2024, 4, 16, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4418),
                            PackageName = "Basic",
                            Package_Description = "Basic package",
                            StartDay = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4405),
                            Status = true
                        },
                        new
                        {
                            id = 2L,
                            EndDay = new DateTime(2024, 4, 16, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4430),
                            PackageName = "Premium",
                            Package_Description = "Premium package",
                            StartDay = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4430),
                            Status = true
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Product_Price")
                        .HasColumnType("double");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("User_id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            ISBN = "123456789",
                            Image = "",
                            Product_Description = "Description for Product 1",
                            Product_Name = "Product 1",
                            Product_Price = 100.0,
                            Status = true,
                            Type = "Type 1",
                            User_id = 1L
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.RoomRegistrations", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Auction_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Register_time")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Auction_id");

                    b.HasIndex("User_id");

                    b.ToTable("RoomRegistrations");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Auction_id = 1L,
                            Register_time = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4535),
                            User_id = 1L
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Package_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Permission_id")
                        .HasColumnType("bigint");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDay")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Package_id");

                    b.HasIndex("Permission_id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Address = "Admin Address",
                            Dob = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4459),
                            Email = "admin@example.com",
                            Gender = "Male",
                            IdentityCard = "123456789",
                            Image = "null",
                            Name = "Admin",
                            Package_id = 1L,
                            Password = "admin",
                            Permission_id = 1L,
                            Phone = 123456789,
                            RegisterDay = new DateTime(2024, 3, 17, 19, 47, 14, 689, DateTimeKind.Local).AddTicks(4460),
                            Status = true,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.UserPermission", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("UserPermission");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            Role = "Admin"
                        },
                        new
                        {
                            id = 2L,
                            Role = "Manager"
                        },
                        new
                        {
                            id = 3L,
                            Role = "Staff"
                        },
                        new
                        {
                            id = 4L,
                            Role = "ProductOwner"
                        },
                        new
                        {
                            id = 5L,
                            Role = "Customer"
                        },
                        new
                        {
                            id = 6L,
                            Role = "Guest"
                        },
                        new
                        {
                            id = 7L,
                            Role = "User"
                        });
                });

            modelBuilder.Entity("LanVar.Core.Entity.Auction", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LanVar.Core.Entity.Bid", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("Auction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanVar.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanVar.Core.Entity.Bill", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("LanVar.Core.Entity.Cart", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanVar.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanVar.Core.Entity.Order", b =>
                {
                    b.HasOne("LanVar.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanVar.Core.Entity.OrderItem", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanVar.Core.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LanVar.Core.Entity.Product", b =>
                {
                    b.HasOne("LanVar.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanVar.Core.Entity.RoomRegistrations", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("Auction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanVar.Core.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanVar.Core.Entity.User", b =>
                {
                    b.HasOne("LanVar.Core.Entity.Package", "Package")
                        .WithMany()
                        .HasForeignKey("Package_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanVar.Core.Entity.UserPermission", "UserPermission")
                        .WithMany()
                        .HasForeignKey("Permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("UserPermission");
                });
#pragma warning restore 612, 618
        }
    }
}
