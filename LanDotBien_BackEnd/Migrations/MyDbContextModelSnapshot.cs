// <auto-generated />
using System;
using BACKEND.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanDotBien_BackEnd.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BACKEND.Models.Auction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AuctionDay")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Auction_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Deposit_Money")
                        .HasColumnType("double");

                    b.Property<long>("Product_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("Product_id");

                    b.ToTable("Auction");
                });

            modelBuilder.Entity("BACKEND.Models.Bid", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Auction_id")
                        .HasColumnType("bigint");

                    b.Property<double>("BID")
                        .HasColumnType("double");

                    b.Property<DateTime>("Bid_time")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Auction_id");

                    b.HasIndex("User_id");

                    b.ToTable("Bid");
                });

            modelBuilder.Entity("BACKEND.Models.Bill", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Order_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Payment_Method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Total_Price")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("Order_id");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("BACKEND.Models.Cart", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Product_id")
                        .HasColumnType("bigint");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("isSelected")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.HasIndex("Product_id");

                    b.HasIndex("User_id");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("BACKEND.Models.Order", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Total_Price")
                        .HasColumnType("double");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("User_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("BACKEND.Models.OrderItem", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Order_id")
                        .HasColumnType("bigint");

                    b.Property<long>("Product_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Order_id");

                    b.HasIndex("Product_id");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("BACKEND.Models.Package", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDay")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Package_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("id");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("BACKEND.Models.Product", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Product_Price")
                        .HasColumnType("double");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("User_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BACKEND.Models.RoomRegistrations", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Auction_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Register_time")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("User_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Auction_id");

                    b.HasIndex("User_id");

                    b.ToTable("RoomRegistrations");
                });

            modelBuilder.Entity("BACKEND.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Package_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Permission_id")
                        .HasColumnType("bigint");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("RegisterDay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Package_id");

                    b.HasIndex("Permission_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BACKEND.Models.UserPermission", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("BACKEND.Models.Auction", b =>
                {
                    b.HasOne("BACKEND.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BACKEND.Models.Bid", b =>
                {
                    b.HasOne("BACKEND.Models.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("Auction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BACKEND.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BACKEND.Models.Bill", b =>
                {
                    b.HasOne("BACKEND.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BACKEND.Models.Cart", b =>
                {
                    b.HasOne("BACKEND.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BACKEND.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BACKEND.Models.Order", b =>
                {
                    b.HasOne("BACKEND.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BACKEND.Models.OrderItem", b =>
                {
                    b.HasOne("BACKEND.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BACKEND.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BACKEND.Models.Product", b =>
                {
                    b.HasOne("BACKEND.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BACKEND.Models.RoomRegistrations", b =>
                {
                    b.HasOne("BACKEND.Models.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("Auction_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BACKEND.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BACKEND.Models.User", b =>
                {
                    b.HasOne("BACKEND.Models.Package", "Package")
                        .WithMany()
                        .HasForeignKey("Package_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BACKEND.Models.UserPermission", "UserPermission")
                        .WithMany()
                        .HasForeignKey("Permission_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("UserPermission");
                });
#pragma warning restore 612, 618
        }
    }
}
